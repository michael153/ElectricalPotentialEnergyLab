var height=600,width=900,radiusCharge=20,radiusPoint=10,vx=0,vy=0,xPoint=300,yPoint=height/2,xBottomCharge=450,yBottomCharge=height-150,xTopCharge=450,yTopCharge=height-(height-150),inAction=!1,dx=10,timeValue=0,dTime=475,chargeOfPoint=-1,chargeOfBottom=10,chargeOfTop=10,timeMax=738E3,bconecx,bconecy,dist1,dist2,dist3,compx,compy,comp,istop,nstop=60,dummy=0,numline=4,distmin=5,distm,emagmin=1E-8,si=0,sii=0,pointCircleObject,bottomChargeCircleObject,topChargeCircleObject,defaultDx=dx,defaultNumline=
numline,defaultChargeOfPoint=chargeOfPoint,defaultChargeOfBottom=chargeOfBottom,defaultChargeOfTop=chargeOfTop,defaultXPoint=xPoint,defaultYPoint=yPoint,defaultVx=vx,defaultVy=vy,defaultXBottomCharge=xBottomCharge,defaultYBottomCharge=yBottomCharge,defaultXTopCharge=xTopCharge,defaultYTopCharge=yTopCharge,showRuler=!1,rulerClicked=!1,rulerStartClicked=!1,rulerEndClicked=!1,rulerX=30,rulerY=30,rulerClickOffset,rulerLength=500,rulerAngToHorizontal=30;
function resetHits(){bottomChargeCircleObject.hit=0;topChargeCircleObject.hit=0}function reset(b){b.strokeStyle="black";b.clearRect(0,0,canvas.width,canvas.height)}
function hardReset(b){xPoint=defaultXPoint;yPoint=defaultYPoint;xBottomCharge=defaultXBottomCharge;yBottomCharge=defaultYBottomCharge;xTopCharge=defaultXTopCharge;yTopCharge=defaultYTopCharge;pointCircleObject.cx=defaultXPoint;pointCircleObject.cy=defaultYPoint;bottomChargeCircleObject.cx=defaultXBottomCharge;bottomChargeCircleObject.cy=defaultYBottomCharge;topChargeCircleObject.cx=defaultXTopCharge;topChargeCircleObject.cy=defaultYTopCharge;timeValue=0;resetHits();repaint(b);!dragRuler&&showRuler&&
drawRuler(b)}function repaint(b){reset(b);drawSetup(b);inAction&&(drawFieldLines(b,"point",line),drawFieldLines(b,"bottom",line),drawFieldLines(b,"top",line),putSimData(b))}function drawPoint(b,c,a,d,e){b.beginPath();b.strokeStyle=c;b.fillStyle=c;b.arc(a,d,e,0,2*Math.PI);b.fill();b.stroke()}function drawCharge(b,c,a,d,e){drawPoint(b,c,a,d,e);drawPoint(b,"white",a,d,1)}function drawLine(b,c,a,d,e,f){b.beginPath();b.strokeStyle=c;b.fillStyle=c;b.moveTo(a,d);b.lineTo(e,f);b.stroke()}
function putRulerData(b){b.font="12px Arial";b.textAlign="right";b.fillStyle="black";b.fillText("Ruler Length: "+Math.round(100*rulerLength)/100,890,25);var c=(360-rulerAngToHorizontal.toFixed(2)).toFixed(2);180<c&&(c=(360-c).toFixed(2));"end"==pivot&&(c=(180-c).toFixed(2));b.fillText("Ruler Angle: "+c,890,45);b.stroke()}
function putSimData(b){b.font="12px Arial";b.textAlign="left";b.fillStyle="black";b.fillText("Min X-value: "+xminVal.toFixed(3),10,25);b.fillText("Max X-value: "+xmaxVal.toFixed(3),10,45);b.fillText("Min Y-value: "+yminVal.toFixed(3),10,65);b.fillText("Max Y-value: "+ymaxVal.toFixed(3),10,85);b.stroke()}var rulerWidth=20,rulerRectX=Array(2),rulerRectY=Array(2),rulerLengthX,rulerLengthY;
function drawRuler(b){rulerRectX[0]=rulerX+rulerWidth/2*Math.cos(toRadians(90+rulerAngToHorizontal));rulerRectY[0]=rulerY+rulerWidth/2*Math.sin(toRadians(90+rulerAngToHorizontal));rulerRectX[1]=rulerX-rulerWidth/2*Math.cos(toRadians(90+rulerAngToHorizontal));rulerRectY[1]=rulerY-rulerWidth/2*Math.sin(toRadians(90+rulerAngToHorizontal));rulerLengthX=rulerLength*Math.cos(toRadians(rulerAngToHorizontal));rulerLengthY=rulerLength*Math.sin(toRadians(rulerAngToHorizontal));for(var c=0;c<rulerLength/10;c++){var a=
rulerRectX[0]+10*c*Math.cos(toRadians(rulerAngToHorizontal)),d=rulerRectY[0]+10*c*Math.sin(toRadians(rulerAngToHorizontal)),e=4+c%2*2+c%4*2;drawLine(b,"#0080ff",a,d,a-e*Math.cos(toRadians(90+rulerAngToHorizontal)),d-e*Math.sin(toRadians(90+rulerAngToHorizontal)))}drawLine(b,"#0080ff",rulerRectX[0],rulerRectY[0],rulerRectX[1],rulerRectY[1]);drawLine(b,"#0080ff",rulerRectX[0]+rulerLengthX,rulerRectY[0]+rulerLengthY,rulerRectX[1]+rulerLengthX,rulerRectY[1]+rulerLengthY);drawLine(b,"#0080ff",rulerRectX[0],rulerRectY[0],
rulerRectX[0]+rulerLengthX,rulerRectY[0]+rulerLengthY);drawLine(b,"#0080ff",rulerRectX[1],rulerRectY[1],rulerRectX[1]+rulerLengthX,rulerRectY[1]+rulerLengthY);drawPoint(b,"#0080ff",rulerX,rulerY,2);drawPoint(b,"#0080ff",rulerX+rulerLengthX,rulerY+rulerLengthY,2);putRulerData(b)}
function drawSetup(b){withinBoundariesOfPanel(xPoint-radiusPoint/2,yPoint-radiusPoint/2,5)&&withinBoundariesOfPanel(xPoint+radiusPoint/2,yPoint+radiusPoint/2,5)&&drawCharge(b,"black",xPoint,yPoint,radiusPoint);drawCharge(b,"#ff1919",xBottomCharge,yBottomCharge,radiusCharge);drawCharge(b,"#ff1919",xTopCharge,yTopCharge,radiusCharge)}function withinBoundariesOfPanel(b,c,a){return b>=0+a&&b<=900-a&&c>=30+a&&c<=600-a}
function withinBottomSphere(b,c){return b<xBottomCharge+radiusCharge&&b>xBottomCharge-radiusCharge&&c<yBottomCharge+radiusCharge&&c>yBottomCharge-radiusCharge}function withinTopSphere(b,c){return b<xTopCharge+radiusCharge&&b>xTopCharge-radiusCharge&&c<yTopCharge+radiusCharge&&c>yTopCharge-radiusCharge}function updateBottomSphere(b,c,a){xBottomCharge=c;yBottomCharge=a;repaint(b)}function updateTopSphere(b,c,a){xTopCharge=c;yTopCharge=a;repaint(b)}
function drawFieldLines(b,c,a){a.ang=Math.PI/8;comp=1;for(istop=0;a.ang<2*Math.PI;){"top"==c?(a.sx=xTopCharge+10*Math.cos(a.ang),a.sy=yTopCharge+10*Math.sin(a.ang)):"bottom"==c?(a.sx=xBottomCharge+10*Math.cos(a.ang),a.sy=yBottomCharge-10*Math.sin(a.ang)):"point"==c&&(a.sx=xPoint-10*Math.cos(a.ang),a.sy=yPoint-10*Math.sin(a.ang));dist1=Math.sqrt(Math.pow(a.sx-xPoint,2)+Math.pow(a.sy-yPoint,2));dist2=Math.sqrt(Math.pow(a.sx-xBottomCharge,2)+Math.pow(a.sy-yBottomCharge,2));dist3=Math.sqrt(Math.pow(a.sx-
xTopCharge,2)+Math.pow(a.sy-yTopCharge,2));for(distm=9;istop<nstop&&dist1>distm&&dist2>distm&&dist3>distm&&a.sx<width&&a.sy<height;){dist1=Math.sqrt(Math.pow(a.sx-xPoint,2)+Math.pow(a.sy-yPoint,2));dist2=Math.sqrt(Math.pow(a.sx-xBottomCharge,2)+Math.pow(a.sy-yBottomCharge,2));dist3=Math.sqrt(Math.pow(a.sx-xTopCharge,2)+Math.pow(a.sy-yTopCharge,2));"point"==c?(compx=-(chargeOfBottom*(a.sx-xBottomCharge)/Math.pow(dist2,3)+chargeOfPoint*(a.sx-xPoint)/Math.pow(dist1,3)+chargeOfTop*(a.sx-xTopCharge)/Math.pow(dist3,
3)),compy=-(chargeOfBottom*(a.sy-yBottomCharge)/Math.pow(dist2,3)+chargeOfPoint*(a.sy-yPoint)/Math.pow(dist1,3)+chargeOfTop*(a.sy-yTopCharge)/Math.pow(dist3,3))):(compx=chargeOfBottom*(a.sx-xBottomCharge)/Math.pow(dist2,3)+chargeOfPoint*(a.sx-xPoint)/Math.pow(dist1,3)+chargeOfTop*(a.sx-xTopCharge)/Math.pow(dist3,3),compy=chargeOfBottom*(a.sy-yBottomCharge)/Math.pow(dist2,3)+chargeOfPoint*(a.sy-yPoint)/Math.pow(dist1,3)+chargeOfTop*(a.sy-yTopCharge)/Math.pow(dist3,3));comp=Math.sqrt(Math.pow(compx,
2)+Math.pow(compy,2));if(comp<emagmin){if("top"==c||"point"==c)a.ex=a.sx+dx;"bottom"==c&&(a.ex=a.sx-dx)}else a.ex=a.sx+compx/comp*dx;comp<emagmin?"top"==c||"point"==c?a.ey=a.sy+dx:"bottom"==c&&(a.ey=a.sy-dx):a.ey=a.sy+compy/comp*dx;withinBoundariesOfPanel(a.sx,a.sy,5)&&withinBoundariesOfPanel(a.ex,a.ey,5)&&!withinTopSphere(a.sx,a.sy)&&!withinBottomSphere(a.sx,a.sy)&&drawLine(b,"#32cb32",a.sx,a.sy,a.ex,a.ey);a.sx=a.ex;a.sy=a.ey;distm=distmin;istop+=1}a.ang+=Math.PI/4;istop=0;distm=distmin}}
var xminVal,xmaxVal,yminVal,ymaxVal;
function drawIteration(b,c,a,d,e){reset(b);comp=1;pointCircleObject.cx=xPoint;pointCircleObject.cy=yPoint;xPoint=a[0];yPoint=a[1];xmaxVal=Math.max(xPoint,xmaxVal);xminVal=Math.min(xPoint,xminVal);ymaxVal=Math.max(yPoint,ymaxVal);yminVal=Math.min(yPoint,yminVal);drawSetup(b);drawFieldLines(b,"point",e);drawFieldLines(b,"bottom",e);drawFieldLines(b,"top",e);putSimData(b);bconecx=pointCircleObject.cx;bconecy=pointCircleObject.cy;d.iterate();a[0]=d.x[0];a[1]=d.x[1];a[2]=d.x[2];a[3]=d.x[3];timeValue+=
dTime;!dragRuler&&showRuler&&drawRuler(b)}var simTimer,isInit=!1,initAction=!1,x,xold,mvar,line;
function init(b){x=Array(4);x[0]=300;x[1]=height/2;x[2]=vx;x[3]=vy;xold=Array(4);xold[0]=x[0];xold[1]=x[1];xold[2]=x[2];xold[3]=x[3];pointCircleObject=new Circle(0,radiusPoint,xPoint,yPoint);bottomChargeCircleObject=new Circle(0,radiusCharge,xBottomCharge,yBottomCharge);topChargeCircleObject=new Circle(0,radiusCharge,xTopCharge,yTopCharge);mvar=new MotionVariable(timeValue,x,.01);mvar.setPotentialValues(chargeOfPoint,chargeOfBottom,chargeOfTop,xBottomCharge,yBottomCharge,xTopCharge,yTopCharge);line=
new Line(0,0,0,0);isInit=!0;drawSetup(b)}
function iterateSimulation(b,c){isInit||(isInit=!0,init(c));inAction&&(initAction||(x[0]=300,x[1]=height/2,x[2]=vx,x[3]=vy,xold[0]=x[0],xold[1]=x[1],xold[2]=x[2],xold[3]=x[3],mvar=new MotionVariable(timeValue,x,.01),mvar.setPotentialValues(chargeOfPoint,chargeOfBottom,chargeOfTop,xBottomCharge,yBottomCharge,xTopCharge,yTopCharge),initAction=!0),timeValue<timeMax&&withinBoundariesOfPanel(xPoint-radiusPoint/2,yPoint-radiusPoint/2,5)&&withinBoundariesOfPanel(xPoint+radiusPoint/2,yPoint+radiusPoint/2,
5)?(xPoint=xold[0],yPoint=xold[1],drawIteration(c,x,xold,mvar,line)):(initAction=inAction=!1,reset(c),drawSetup(c),!dragRuler&&showRuler&&drawRuler(c),clearInterval(simTimer)))};